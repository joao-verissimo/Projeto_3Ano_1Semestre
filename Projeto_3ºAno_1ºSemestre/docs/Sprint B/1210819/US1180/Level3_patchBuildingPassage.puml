@startuml
autonumber
'hide footbox
actor "Admin" as admin

participant ":View" as sys
participant ":FE_Component" as comp
participant ":FE_FloorService" as FEsrvc
participant ":Routing" as route
participant ":FloorController" as ctrl
participant ":FloorService" as srvc
participant ":FloorRepo" as repo
participant ":FloorMap" as rtMap
participant ":FloorSchema" as rtSchema

activate admin

admin -> sys: update floor passages
activate sys
sys --> admin: request necessary data()
admin -> sys : insert all the data
activate comp

sys -> comp : getFloors()
activate FEsrvc
comp -> FEsrvc : listFloors()
activate route
FEsrvc -> route: GET route{}
activate ctrl
route -> ctrl: listAllFloors()
activate srvc
ctrl -> srvc: findAll()
activate repo
srvc -> repo: findAll()
deactivate FEsrvc
deactivate route
deactivate ctrl
deactivate srvc
deactivate repo

sys -> comp : patchFloorPassages()
activate FEsrvc
comp -> FEsrvc : patchPassages(Object{id, passages})
activate route
FEsrvc -> route: PATCH route{json}
activate ctrl
route -> ctrl: patchPassageBuilding(json)
activate srvc
ctrl -> srvc: patchPassageBuilding(IFloorDTO)
activate repo
srvc -> repo: findById(floor.id)
loop all passages
    srvc -> repo: findById(floor.passages.id)
end

srvc -> repo: save(floor)
activate rtMap
repo -> rtMap: toPersistance(floor)
activate rtSchema
repo -> rtSchema: create(floor)
deactivate rtSchema
deactivate rtMap

alt saved with success
    repo --> srvc: floor
    srvc --> ctrl: floor
    ctrl --> route : HTTP: 201
    route --> FEsrvc: HTTP: 201
    FEsrvc --> comp: HTTP: 201
    comp --> sys: HTTP: 201
    sys --> admin: show success message
else
    repo --> srvc: error
    srvc --> ctrl: error
    ctrl --> route : HTTP: 400
    route --> FEsrvc: HTTP: 400
    FEsrvc --> comp: HTTP: 400
    comp --> sys: HTTP: 400
    sys --> admin: show failure message
end

deactivate repo
deactivate ctrl
deactivate route
deactivate FEsrvc
deactivate comp
deactivate sys
deactivate admin
@enduml